adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]
legend(x = lgd.x, y = lgd.y,
title = "Reactome signif enriched",
legend = str_trunc(legend_df$Description, 15),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome signif enriched",
legend = str_trunc(legend_df$Description, 15),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome signif enriched",
legend = str_trunc(legend_df$Description, 25),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome signif enriched",
legend = str_trunc(legend_df$Description, 35),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 0.5,
legend = str_trunc(legend_df$Description, 35),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 1.5,
legend = str_trunc(legend_df$Description, 35),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 1.2,
legend = str_trunc(legend_df$Description, 35),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
colori_geni <- colorRampPalette(brewer.pal(12, name="Set3"))(length(unique(df$ID)))
colori_moduli <- colorRampPalette(brewer.pal(12, name="Paired"))(length(unique(df$variable)))
pdf("../../../../../circos.pdf")
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 1.2,
legend = str_trunc(legend_df$Description, 40),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
dev.off()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Estrai i colori utilizzati nel grafico principale
#main_colors <- get.cell.meta.data("sector.col")
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 0.7,
cex = 0.5,
legend = str_trunc(legend_df$Description, 40),
fill = colori_moduli,
col = "black", cex = 0.8, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 0.7,
legend = str_trunc(legend_df$Description, 40),
fill = colori_moduli,
col = "black", cex = 0.5, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,20))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 0.7,
legend = str_trunc(legend_df$Description, 40),
fill = colori_moduli,
col = "black", cex = 0.6, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
circos_reactome = function(){
par(mar = c(0,0,0,15))
chordDiagram(df,
transparency = 0.5,
annotationTrack = c("grid", "axis"),
preAllocateTracks = 1,
big.gap = 10,
grid.col = c(colori_geni, colori_moduli),
col = c(colori_geni, colori_moduli))
# ttl.x <- par("usr")[2] -0.5
# ttl.y <- par("usr")[4] -0.5
#title("Reactome significant Enriched Modules", outer = T)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim),
ylim[1] + .1,
sector.name,
facing = "clockwise",
niceFacing = TRUE,
adj = c(0, 0.5),
cex = 0.7)
circos.axis(h = "top",
labels.cex = 0.2,
sector.index = sector.name,
track.index = 2)
}, bg.border = NA)
# Aggiungi la legenda
legend_df <- reactome_results_signif[, c("ID", "Description")]
# Imposta le coordinate per la legenda
par(xpd=TRUE)
lgd.x <- par("usr")[2]*0.9
lgd.y <- par("usr")[3]*0.1
legend(x = lgd.x, y = lgd.y,
title = "Reactome Signif Enriched",
title.cex = 0.7,
legend = str_trunc(legend_df$Description, 40),
fill = colori_moduli,
col = "black", cex = 0.6, bty = "n", inset=c(0, 0.1))
}
circos_reactome()
gene_list
for (gene in gene_list) {
print(gene)
}
for (gene in as.factor(gene_list)) {
print(gene)
}
for (i in 1:length(gene_list)) {
cat(gene_list[i], "\n")
}
